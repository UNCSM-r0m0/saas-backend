version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: saas-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: saas_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - saas-network

  # Backend NestJS
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: saas-backend
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/saas_db?schema=public
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: 7d
      OLLAMA_URL: ${OLLAMA_URL:-http://host.docker.internal:11434}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-deepseek-r1:7b}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK_URL: ${GITHUB_CALLBACK_URL}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3001}
    depends_on:
      - postgres
    networks:
      - saas-network
    command: sh -c "npx prisma migrate deploy && npm run start:prod"

volumes:
  postgres_data:

networks:
  saas-network:
    driver: bridge
